{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dimmer-action-form/dimmer-action-form.component.ts","./src/app/components/dimmer-action-form/dimmer-action-form.component.html","./src/app/components/dimmer-load/dimmer-load.component.ts","./src/app/components/dimmer-load/dimmer-load.component.html","./src/app/components/error-message-bar/error-message-bar.component.ts","./src/app/components/error-message-bar/error-message-bar.component.html","./src/app/components/load-card-header/load-card-header.component.ts","./src/app/components/load-card-header/load-card-header.component.html","./src/app/components/modal-without-join/modal-without-join.component.ts","./src/app/components/modal-without-join/modal-without-join.component.html","./src/app/components/motor-action-form/motor-action-form.component.ts","./src/app/components/motor-action-form/motor-action-form.component.html","./src/app/components/motor-load/motor-load.component.ts","./src/app/components/motor-load/motor-load.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/components/nav-child/nav-child.component.ts","./src/app/components/nav-child/nav-child.component.html","./src/app/components/room-card/room-card.component.ts","./src/app/components/room-card/room-card.component.html","./src/app/components/switch-action-form/switch-action-form.component.ts","./src/app/components/switch-action-form/switch-action-form.component.html","./src/app/components/switch-load/switch-load.component.ts","./src/app/components/switch-load/switch-load.component.html","./src/app/crestron/ana-fb.directive.ts","./src/app/crestron/ana-send.directive.ts","./src/app/crestron/dig-enable.directive.ts","./src/app/crestron/dig-fb.directive.ts","./src/app/crestron/dig-press.directive.ts","./src/app/crestron/dig-visible.directive.ts","./src/app/crestron/modal/modal.component.ts","./src/app/crestron/modal/modal.component.html","./src/app/crestron/ser-fb.directive.ts","./src/app/crestron/ser-send.directive.ts","./src/app/directive/stop-propagation.directive.ts","./src/app/page/monitoring/monitoring.component.ts","./src/app/page/monitoring/monitoring.component.html","./src/app/page/room-view/room-view.component.ts","./src/app/page/room-view/room-view.component.html","./src/app/page/rooms-panel/rooms-panel.component.ts","./src/app/page/rooms-panel/rooms-panel.component.html","./src/app/page/scene-action-create/scene-action-create.component.ts","./src/app/page/scene-action-create/scene-action-create.component.html","./src/app/page/scene-details/scene-details.component.ts","./src/app/page/scene-details/scene-details.component.html","./src/app/page/scene-table/scene-table.component.ts","./src/app/page/scene-table/scene-table.component.html","./src/app/page/setting/setting.component.ts","./src/app/page/setting/setting.component.html","./src/app/service/data.ts","./src/app/service/room.service.ts","./src/app/service/route.ts","./src/app/service/router.service.ts","./src/app/service/scene.service.ts","./src/app/service/type.ts","./src/app/translation/CustomLoader.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { RouterService } from './service/router.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n    title = 'crcom-basic';\r\n    visible = false;\r\n    route = '';\r\n\r\n    langForm: FormControl;\r\n\r\n    constructor(private routerService: RouterService, private translate: TranslateService) {\r\n        translate.setDefaultLang('en');\r\n        this.langForm = new FormControl('en');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.routerService.getCurrentRoute().subscribe(route => {\r\n            this.route = route.path;\r\n        });\r\n        this.langForm.valueChanges.subscribe(value => {\r\n            this.translate.use(value);\r\n        });\r\n    }\r\n\r\n    showModal() {\r\n        this.visible = true;\r\n    }\r\n\r\n    hideModal() {\r\n        this.visible = false;\r\n    }\r\n\r\n    navigate(route: string) {\r\n        this.routerService.navigate(route);\r\n    }\r\n}\r\n","<!-- <div>A button that sends data to digital join 10 and changes CSS class to \"active\" when digital FB join 10 is high:</div>\r\n<button [DigPress]=\"10\" [DigFB]=\"10\">enable -></button><br>\r\n<div>A button that sends/receives join 11 and is enabled when digital FB join 10 is high:</div>\r\n<button [DigPress]=\"11\" [DigFB]=\"11\" [DigEnable]=\"10\">show -></button><br>\r\n<div>A button that sends/receives join 12 and is visible when digital FB join 11 is high:</div>\r\n<button [DigPress]=\"12\" [DigFB]=\"12\" [DigVisible]=\"11\">join 12</button>\r\n<br>\r\n<div>An input slider that sends data to analog join 11:</div>\r\n<input type=\"range\" min=\"0\" max=\"100\" step=\"5\" [AnaSend]=\"11\">\r\n<br>\r\n<div>A read-only slider (gauge) on analog feedback join 11:</div>\r\n<input type=\"range\" min=\"0\" max=\"100\" [AnaFB]=\"11\" style=\"pointer-events:none\">\r\n<div>A text input box that sends data to serial join 11:</div>\r\n<input type=\"text\" [SerSend]=\"11\">\r\n<div>A span element that displays serial fb join 11:</div>\r\n<span [SerFB]=\"11\"></span>\r\n<div>This button opens a modal/popup on FB join 13:</div> -->\r\n<!-- <ch5-button\r\n        type=\"success\"\r\n        stretch=\"width\"\r\n        label=\"Show Modal\"\r\n        (click)=\"showModal()\"\r\n    ></ch5-button>\r\n    <ch5-modal-dialog\r\n        [show]=\"visible\"\r\n        stretch=\"width\"\r\n        hideokbutton=\"true\"\r\n        hidecancelbutton=\"true\"\r\n        closable=\"false\"\r\n        dismissable=\"false\"\r\n    >\r\n        <h1>Sample text</h1>\r\n        <ch5-image id=\"ex1-img\" url=\"https://picsum.photos/200/300/?random\"> </ch5-image>\r\n        <div>\r\n            <ch5-button type=\"danger\" label=\"Close\" (click)=\"hideModal()\"></ch5-button>\r\n        </div>\r\n    </ch5-modal-dialog> -->\r\n<!-- <button [DigPress]=\"13\" [DigFB]=\"13\">modal!</button><br />\r\n<app-modal [VisJoin]=\"13\">\r\n    <div style=\"width: 300px; height: 75px; margin: auto; background: gray\">\r\n        <button [DigPress]=\"13\" style=\"float: right\">Close</button><br />\r\n        <div>Button press sends join 13 to close this modal</div>\r\n    </div>\r\n</app-modal> -->\r\n<div class=\"root-container\">\r\n    <div>\r\n        <mat-toolbar class=\"app-header flex-horizontal\"\r\n            >{{ 'header.title' | translate }}\r\n            <select [formControl]=\"langForm\">\r\n                <option value=\"en\">Eng</option>\r\n                <option value=\"zh\">Chi</option>\r\n            </select>\r\n        </mat-toolbar>\r\n    </div>\r\n    <div [ngSwitch]=\"route\">\r\n        <div *ngSwitchCase=\"'room_panel'\">\r\n            <app-rooms-panel></app-rooms-panel>\r\n        </div>\r\n        <div *ngSwitchCase=\"'monitoring'\">\r\n            <app-monitoring></app-monitoring>\r\n        </div>\r\n        <div *ngSwitchCase=\"'3'\">\r\n            <div>View 3</div>\r\n        </div>\r\n        <div *ngSwitchCase=\"'setting'\">\r\n            <app-setting></app-setting>\r\n        </div>\r\n        <div *ngSwitchCase=\"'room_view'\">\r\n            <app-room-view></app-room-view>\r\n        </div>\r\n        <div *ngSwitchCase=\"'scene_table'\">\r\n            <app-scene-table></app-scene-table>\r\n        </div>\r\n        <div *ngSwitchCase=\"'scene_details'\">\r\n            <app-scene-details></app-scene-details>\r\n        </div>\r\n        <div *ngSwitchCase=\"'scene_action_create'\">\r\n            <app-scene-action-create></app-scene-action-create>\r\n        </div>\r\n        <div *ngSwitchDefault=\"\">\r\n            <app-rooms-panel></app-rooms-panel>\r\n        </div>\r\n    </div>\r\n    <div class=\"app-nav-bar\">\r\n        <app-nav-bar></app-nav-bar>\r\n    </div>\r\n</div>\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { AppComponent } from './app.component';\r\nimport { DimmerActionFormComponent } from './components/dimmer-action-form/dimmer-action-form.component';\r\nimport { DimmerLoadComponent } from './components/dimmer-load/dimmer-load.component';\r\nimport { ErrorMessageBarComponent } from './components/error-message-bar/error-message-bar.component';\r\nimport { LoadCardHeaderComponent } from './components/load-card-header/load-card-header.component';\r\nimport { ModalWithoutJoinComponent } from './components/modal-without-join/modal-without-join.component';\r\nimport { MotorActionFormComponent } from './components/motor-action-form/motor-action-form.component';\r\nimport { MotorLoadComponent } from './components/motor-load/motor-load.component';\r\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\r\nimport { NavChildComponent } from './components/nav-child/nav-child.component';\r\nimport { RoomCardComponent } from './components/room-card/room-card.component';\r\nimport { SwitchActionFormComponent } from './components/switch-action-form/switch-action-form.component';\r\nimport { SwitchLoadComponent } from './components/switch-load/switch-load.component';\r\nimport { AnaFbDirective } from './crestron/ana-fb.directive';\r\nimport { AnaSendDirective } from './crestron/ana-send.directive';\r\nimport { DigEnableDirective } from './crestron/dig-enable.directive';\r\nimport { DigFbDirective } from './crestron/dig-fb.directive';\r\nimport { DigPressDirective } from './crestron/dig-press.directive';\r\nimport { DigVisibleDirective } from './crestron/dig-visible.directive';\r\nimport { ModalComponent } from './crestron/modal/modal.component';\r\nimport { SerFbDirective } from './crestron/ser-fb.directive';\r\nimport { SerSendDirective } from './crestron/ser-send.directive';\r\nimport { StopPropagationDirective } from './directive/stop-propagation.directive';\r\nimport { MonitoringComponent } from './page/monitoring/monitoring.component';\r\nimport { RoomViewComponent } from './page/room-view/room-view.component';\r\nimport { RoomsPanelComponent } from './page/rooms-panel/rooms-panel.component';\r\nimport { SceneActionCreateComponent } from './page/scene-action-create/scene-action-create.component';\r\nimport { SceneDetailsComponent } from './page/scene-details/scene-details.component';\r\nimport { SceneTableComponent } from './page/scene-table/scene-table.component';\r\nimport { SettingComponent } from './page/setting/setting.component';\r\nimport CustomLoader from './translation/CustomLoader';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        DigPressDirective,\r\n        DigEnableDirective,\r\n        DigVisibleDirective,\r\n        DigFbDirective,\r\n        AnaSendDirective,\r\n        AnaFbDirective,\r\n        SerSendDirective,\r\n        SerFbDirective,\r\n        ModalComponent,\r\n        ModalWithoutJoinComponent,\r\n        NavChildComponent,\r\n        NavBarComponent,\r\n        RoomCardComponent,\r\n        RoomsPanelComponent,\r\n        MonitoringComponent,\r\n        DimmerLoadComponent,\r\n        RoomViewComponent,\r\n        SwitchLoadComponent,\r\n        MotorLoadComponent,\r\n        SceneTableComponent,\r\n        SceneDetailsComponent,\r\n        SceneActionCreateComponent,\r\n        DimmerActionFormComponent,\r\n        SwitchActionFormComponent,\r\n        MotorActionFormComponent,\r\n        ErrorMessageBarComponent,\r\n        StopPropagationDirective,\r\n        LoadCardHeaderComponent,\r\n        SettingComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        NoopAnimationsModule,\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatTableModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatSnackBarModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useClass: CustomLoader,\r\n            },\r\n        }),\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AppModule {}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PAGE_SCENE_DETAILS, PAGE_SCENE_TABLE } from 'src/app/service/route';\nimport { RouterService } from 'src/app/service/router.service';\nimport { SceneService } from 'src/app/service/scene.service';\nimport { DimmerLoad, Load } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-dimmer-action-form',\n    templateUrl: './dimmer-action-form.component.html',\n    styleUrls: ['./dimmer-action-form.component.scss'],\n})\nexport class DimmerActionFormComponent implements OnInit {\n    @Input()\n    load!: Load;\n\n    @Input()\n    sceneId!: string;\n\n    sliderValue = 0;\n    powerState = false;\n    formGroup!: FormGroup;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: RouterService,\n        private sceneService: SceneService\n    ) {}\n\n    ngOnInit(): void {\n        this.formGroup = this.formBuilder.group({\n            fadeTime: [2, Validators.compose([Validators.required, Validators.min(0)])],\n            delayTime: [0, Validators.compose([Validators.required, Validators.min(0)])],\n        });\n    }\n\n    onToggleChange(): void {\n        const level = this.powerState ? 0 : 100;\n        this.changeBrightness(level);\n    }\n\n    onSliderChange(value?: number | null): void {\n        if (!value) {\n            return;\n        }\n        this.changeBrightness(value);\n    }\n\n    changeBrightness(value: number): void {\n        this.sliderValue = value;\n        if (this.sliderValue > 0) {\n            this.powerState = true;\n        } else {\n            this.powerState = false;\n        }\n    }\n\n    addScene(): void {\n        if (!this.formGroup.valid) {\n            this.error = 'Please fill in all the required fields and no negative number is allowed';\n            return;\n        }\n        this.error = '';\n        const dimmerLoad = this.load as DimmerLoad;\n        const { fade, delay } = this.formGroup.value;\n        this.sceneService\n            .addActionToScene(this.sceneId, {\n                ...dimmerLoad,\n                brightness: this.sliderValue,\n                delay,\n                fade,\n            })\n            .subscribe({\n                next: () => {\n                    this.router.navigate(PAGE_SCENE_DETAILS, { name: this.sceneId });\n                },\n                complete: () => {},\n                error: error => {\n                    this.error = error.message;\n                },\n            });\n    }\n\n    back() {\n        this.router.navigate(PAGE_SCENE_TABLE);\n    }\n}\n","<form [formGroup]=\"formGroup\" (ngSubmit)=\"addScene()\">\n    <p class=\"dimmer-title\">Dimming Level</p>\n    <div class=\"dimmer-slider-wrapper\">\n        <mat-slider\n            min=\"0\"\n            max=\"100\"\n            step=\"1\"\n            [value]=\"sliderValue\"\n            (change)=\"onSliderChange($event?.value)\"\n            (input)=\"onSliderChange($event?.value)\"\n        ></mat-slider>\n        <mat-slide-toggle\n            (toggleChange)=\"onToggleChange()\"\n            [checked]=\"powerState\"\n        ></mat-slide-toggle>\n        <p class=\"slider-value-text\">{{ sliderValue }}%</p>\n    </div>\n\n    <div>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Fade Time</mat-label>\n            <input\n                matInput\n                type=\"number\"\n                inputmode=\"numeric\"\n                min=\"0\"\n                required\n                [defaultValue]=\"2\"\n                formControlName=\"fadeTime\"\n            />\n        </mat-form-field>\n    </div>\n\n    <div>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Delay Time</mat-label>\n            <input\n                matInput\n                type=\"number\"\n                min=\"0\"\n                inputmode=\"numeric\"\n                required\n                [defaultValue]=\"0\"\n                formControlName=\"delayTime\"\n            />\n        </mat-form-field>\n    </div>\n    <div>\n        <button mat-raised-button type=\"submit\" color=\"primary\" [disabled]=\"!formGroup.valid\">\n            Add Action\n        </button>\n    </div>\n</form>\n<app-error-message-bar *ngIf=\"error\" [message]=\"error\" (back)=\"back()\"></app-error-message-bar>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSliderChange } from '@angular/material/slider';\nimport { DimmerLoad } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-dimmer-load',\n    templateUrl: './dimmer-load.component.html',\n    styleUrls: ['./dimmer-load.component.scss'],\n})\nexport class DimmerLoadComponent implements OnInit {\n    @Input() load!: DimmerLoad;\n    sliderValue = 0;\n    powerState = false;\n    editMode = false;\n\n    nameFormControl: FormControl;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        this.nameFormControl = new FormControl(this.load.name, Validators.required);\n    }\n\n    onToggleChange(): void {\n        const level = this.powerState ? 0 : 100;\n        this.changeBrightness(level);\n    }\n\n    onSliderChange({ value }: MatSliderChange): void {\n        if (!value) {\n            return;\n        }\n        this.changeBrightness(value);\n    }\n\n    changeBrightness(value: number): void {\n        this.sliderValue = value;\n        if (this.sliderValue > 0) {\n            this.powerState = true;\n        } else {\n            this.powerState = false;\n        }\n    }\n\n    changeToEditMode() {\n        this.editMode = true;\n    }\n\n    changeDeviceName() {\n        this.load.name = this.nameFormControl.value;\n        this.editMode = false;\n    }\n}\n","<mat-card class=\"card\">\n    <app-load-card-header [load]=\"load\"></app-load-card-header>\n    <div class=\"dimmable-control\">\n        <p class=\"valueText\">{{ sliderValue }}%</p>\n        <mat-slider\n            min=\"0\"\n            max=\"100\"\n            step=\"1\"\n            [value]=\"sliderValue\"\n            (change)=\"onSliderChange($event)\"\n            (input)=\"onSliderChange($event)\"\n        ></mat-slider>\n        <mat-slide-toggle\n            (toggleChange)=\"onToggleChange()\"\n            [checked]=\"powerState\"\n        ></mat-slide-toggle>\n    </div>\n</mat-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-error-message-bar',\n    templateUrl: './error-message-bar.component.html',\n    styleUrls: ['./error-message-bar.component.scss'],\n})\nexport class ErrorMessageBarComponent implements OnInit {\n    @Input()\n    message: string;\n\n    @Output()\n    back: EventEmitter<void> = new EventEmitter();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n    backPress() {\n        this.back.emit();\n    }\n}\n","<div class=\"warning-header\">\n    <h3>Error</h3>\n    <p class=\"warning-header-text\">{{ message }}</p>\n    <div style=\"margin-left: auto\">\n        <button mat-button color=\"primary\" (click)=\"backPress()\">Back</button>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Load } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-load-card-header',\n    templateUrl: './load-card-header.component.html',\n    styleUrls: ['./load-card-header.component.scss'],\n})\nexport class LoadCardHeaderComponent implements OnInit {\n    @Input() load!: Load;\n    editMode = false;\n    nameFormControl: FormControl;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        this.nameFormControl = new FormControl(this.load.name, Validators.required);\n    }\n\n    changeToEditMode() {\n        this.editMode = true;\n    }\n\n    changeDeviceName() {\n        this.load.name = this.nameFormControl.value;\n        this.editMode = false;\n    }\n}\n","<div class=\"flex-horizontal w-100\">\n    <div class=\"w-100\" *ngIf=\"!editMode\">\n        <div class=\"flex-horizontal\">\n            <mat-card-title style=\"text-overflow: ellipsis; overflow: hidden\">{{\n                load.name\n            }}</mat-card-title>\n            <div>\n                <mat-icon (click)=\"changeToEditMode()\">edit</mat-icon>\n            </div>\n        </div>\n        <mat-card-subtitle\n            >{{ load.type | uppercase }} (Integration ID: {{ load.id }})</mat-card-subtitle\n        >\n    </div>\n    <form class=\"form\" *ngIf=\"editMode\" (ngSubmit)=\"changeDeviceName()\">\n        <mat-form-field class=\"field\">\n            <input matInput placeholder=\"Name\" [formControl]=\"nameFormControl\" />\n        </mat-form-field>\n        <button mat-button color=\"primary\" type=\"submit\">Change</button>\n    </form>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-modal-without-join',\n    templateUrl: './modal-without-join.component.html',\n    styleUrls: ['./modal-without-join.component.scss'],\n})\nexport class ModalWithoutJoinComponent implements OnInit {\n    @Input()\n    visible = false;\n    @Output() hideModal = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n    show() {\n        this.visible = true;\n    }\n    hide() {\n        this.hideModal.emit();\n    }\n}\n","<div id=\"myModal\" class=\"modal\" [style.display]=\"visible ? 'flex' : 'none'\">\n    <ng-content></ng-content>\n    <div>\n        <button (click)=\"hide()\">Close</button>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PAGE_SCENE_DETAILS, PAGE_SCENE_TABLE } from 'src/app/service/route';\nimport { RouterService } from 'src/app/service/router.service';\nimport { SceneService } from 'src/app/service/scene.service';\nimport { Load, MotorActionType, MotorLoad } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-motor-action-form',\n    templateUrl: './motor-action-form.component.html',\n    styleUrls: ['./motor-action-form.component.scss'],\n})\nexport class MotorActionFormComponent implements OnInit {\n    @Input() load!: Load;\n    @Input() sceneId!: string;\n    formGroup!: FormGroup;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: RouterService,\n        private sceneService: SceneService\n    ) {}\n\n    ngOnInit(): void {\n        this.formGroup = this.formBuilder.group({\n            motorAction: ['', Validators.required],\n        });\n    }\n\n    addScene(): void {\n        if (!this.formGroup.valid) {\n            this.error = 'Please fill the required field';\n            return;\n        }\n        this.error = '';\n        const motorLoad = this.load as MotorLoad;\n        this.sceneService\n            .addActionToScene(this.sceneId, {\n                ...motorLoad,\n                action:\n                    this.formGroup.value.motorAction === 'raise'\n                        ? MotorActionType.RAISE\n                        : MotorActionType.LOWER,\n            })\n            .subscribe({\n                next: () => {\n                    this.router.navigate(PAGE_SCENE_DETAILS, { name: this.sceneId });\n                },\n                complete: () => {},\n                error: error => {\n                    this.error = error.message;\n                },\n            });\n    }\n\n    back() {\n        this.router.navigate(PAGE_SCENE_TABLE);\n    }\n}\n","<form [formGroup]=\"formGroup\" (ngSubmit)=\"addScene()\">\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Action</mat-label>\n        <mat-select required formControlName=\"motorAction\">\n            <mat-option value=\"raise\">Raise</mat-option>\n            <mat-option value=\"lower\">Lower</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <div>\n        <button mat-raised-button type=\"submit\" color=\"primary\" [disabled]=\"!formGroup.valid\">\n            Confirm\n        </button>\n    </div>\n</form>\n\n<app-error-message-bar *ngIf=\"error\" [message]=\"error\" (back)=\"back()\"></app-error-message-bar>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MotorLoad } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-motor-load',\n    templateUrl: './motor-load.component.html',\n    styleUrls: ['./motor-load.component.scss'],\n})\nexport class MotorLoadComponent implements OnInit {\n    @Input() load!: MotorLoad;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<mat-card class=\"card\">\n    <app-load-card-header [load]=\"load\"></app-load-card-header>\n    <div class=\"motor-button-container\">\n        <button mat-mini-fab aria-label=\"Raise\" color=\"primary\">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n        </button>\n        <button mat-mini-fab aria-label=\"Stop\" color=\"primary\">\n            <mat-icon>stop</mat-icon>\n        </button>\n        <button mat-mini-fab aria-label=\"Lower\" color=\"primary\">\n            <mat-icon>keyboard_arrow_right</mat-icon>\n        </button>\n    </div>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport {\n    PAGE_MONITORING,\n    PAGE_ROOMS_PANEL,\n    PAGE_SCENE_TABLE,\n    PAGE_SETTING,\n} from 'src/app/service/route';\nimport { RouterService } from 'src/app/service/router.service';\n\n@Component({\n    selector: 'app-nav-bar',\n    templateUrl: './nav-bar.component.html',\n    styleUrls: ['./nav-bar.component.scss'],\n})\nexport class NavBarComponent implements OnInit {\n    children: { label: string; route: string; icon?: string }[] = [\n        { label: 'Lighting', route: PAGE_ROOMS_PANEL, icon: 'brightness_high' },\n        { label: 'Monitoring', route: PAGE_MONITORING, icon: 'video_call' },\n        { label: 'Scene', route: PAGE_SCENE_TABLE, icon: 'memory' },\n        { label: 'Setting', route: PAGE_SETTING, icon: 'settings' },\n    ];\n\n    constructor(private router: RouterService) {}\n\n    ngOnInit(): void {}\n    navigate(route: string) {\n        this.router.navigate(route);\n    }\n}\n","<div class=\"page-nav-bar\">\n    <app-nav-child\n        *ngFor=\"let child of children\"\n        [route]=\"child.route\"\n        [label]=\"child.label\"\n        [icon]=\"child.icon || ''\"\n    ></app-nav-child>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { RouterService } from 'src/app/service/router.service';\n\n@Component({\n    selector: 'app-nav-child',\n    templateUrl: './nav-child.component.html',\n    styleUrls: ['./nav-child.component.scss'],\n})\nexport class NavChildComponent implements OnInit {\n    @Input()\n    route = '';\n\n    @Input()\n    label = '';\n\n    @Input()\n    icon = '';\n\n    currentPath = '';\n\n    constructor(private router: RouterService) {}\n\n    ngOnInit(): void {\n        this.router.getCurrentRoute().subscribe(route => {\n            this.currentPath = route.path;\n        });\n    }\n\n    navigate() {\n        this.router.navigate(this.route);\n    }\n}\n","<div\n    (click)=\"navigate()\"\n    class=\"page-nav-child\"\n    [class.page-nav-child-selected]=\"route == currentPath\"\n>\n    <mat-icon *ngIf=\"icon\">{{ icon }}</mat-icon>\n    <p>{{ label }}</p>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { RoomService } from 'src/app/service/room.service';\nimport { PAGE_ROOM_VIEW } from 'src/app/service/route';\nimport { RouterService } from 'src/app/service/router.service';\n\n@Component({\n    selector: 'app-room-card',\n    templateUrl: './room-card.component.html',\n    styleUrls: ['./room-card.component.scss'],\n})\nexport class RoomCardComponent implements OnInit {\n    @Input()\n    name = '';\n\n    @Input()\n    count = 0;\n\n    editMode = false;\n    nameFormControl: FormControl;\n\n    constructor(\n        private router: RouterService,\n        private roomService: RoomService,\n        private snackBar: MatSnackBar\n    ) {}\n\n    ngOnInit(): void {\n        this.nameFormControl = new FormControl(this.name, Validators.required);\n    }\n\n    editRoom() {\n        this.editMode = true;\n    }\n\n    changeRoomName() {\n        if (!this.nameFormControl.valid) {\n            this.snackBar.open('The name is not in the right format', 'close', { duration: 2000 });\n        }\n        const newRoomName = this.nameFormControl.value;\n        this.roomService.changeRoomName(this.name, newRoomName).subscribe(\n            () => {\n                this.editMode = false;\n            },\n            error => {\n                this.snackBar.open(error, 'close', { duration: 2000 });\n            }\n        );\n    }\n\n    navigateRoom() {\n        this.router.navigate(PAGE_ROOM_VIEW, { name: this.name });\n    }\n}\n","<mat-card class=\"room-card\" (click)=\"navigateRoom()\">\n    <div class=\"w-100\">\n        <div class=\"flex-horizontal w-100\" *ngIf=\"!editMode\">\n            <mat-card-title style=\"text-overflow: ellipsis; overflow: hidden\">{{\n                name\n            }}</mat-card-title>\n            <mat-icon appClickStopPropagation (click)=\"editRoom()\">edit</mat-icon>\n        </div>\n        <form\n            class=\"flex-horizontal\"\n            *ngIf=\"editMode\"\n            appClickStopPropagation\n            (ngSubmit)=\"changeRoomName()\"\n        >\n            <mat-form-field class=\"field\">\n                <input matInput placeholder=\"Name\" [formControl]=\"nameFormControl\" />\n            </mat-form-field>\n            <button mat-button color=\"primary\" type=\"submit\">Change</button>\n        </form>\n    </div>\n    <div>\n        <mat-card-subtitle>{{ count }} devices</mat-card-subtitle>\n    </div>\n</mat-card>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PAGE_SCENE_DETAILS, PAGE_SCENE_TABLE } from 'src/app/service/route';\nimport { RouterService } from 'src/app/service/router.service';\nimport { SceneService } from 'src/app/service/scene.service';\nimport { Load, SwitchLoad } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-switch-action-form',\n    templateUrl: './switch-action-form.component.html',\n    styleUrls: ['./switch-action-form.component.scss'],\n})\nexport class SwitchActionFormComponent implements OnInit {\n    @Input()\n    load!: Load;\n    @Input()\n    sceneId!: string;\n    formGroup!: FormGroup;\n    powerState = false;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private sceneService: SceneService,\n        private router: RouterService\n    ) {}\n\n    ngOnInit(): void {\n        this.formGroup = this.formBuilder.group({\n            delay: [0, Validators.compose([Validators.required, Validators.min(0)])],\n        });\n    }\n\n    onToggleChange() {\n        this.powerState = !this.powerState;\n    }\n\n    addScene() {\n        if (!this.formGroup.valid) {\n            alert('Please fill all the required field');\n            return;\n        }\n        const switchLoad = this.load as SwitchLoad;\n        this.sceneService\n            .addActionToScene(this.sceneId, {\n                ...switchLoad,\n                power: this.powerState,\n                delay: this.formGroup.value.delay,\n            })\n            .subscribe(() => {\n                this.router.navigate(PAGE_SCENE_DETAILS, { name: this.sceneId });\n            });\n    }\n\n    back() {\n        this.router.navigate(PAGE_SCENE_TABLE);\n    }\n}\n","<h3 class=\"switch-control-title\">Device State</h3>\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"addScene()\">\n    <div class=\"switch-control-wrapper\">\n        <mat-slide-toggle\n            (toggleChange)=\"onToggleChange()\"\n            [checked]=\"powerState\"\n        ></mat-slide-toggle>\n        <p class=\"power-state-text\">{{ powerState ? 'ON' : 'OFF' }}</p>\n    </div>\n    <div>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Delay Time</mat-label>\n            <input\n                matInput\n                required\n                type=\"number\"\n                inputmode=\"numeric\"\n                [min]=\"0\"\n                [defaultValue]=\"0\"\n                formControlName=\"delay\"\n            />\n        </mat-form-field>\n        <div>\n            <button mat-raised-button type=\"submit\" color=\"primary\" [disabled]=\"!formGroup.valid\">\n                Confirm\n            </button>\n        </div>\n    </div>\n</form>\n<app-error-message-bar *ngIf=\"error\" [message]=\"error\" (back)=\"back()\"></app-error-message-bar>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { SwitchLoad } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-switch-load',\n    templateUrl: './switch-load.component.html',\n    styleUrls: ['./switch-load.component.scss'],\n})\nexport class SwitchLoadComponent implements OnInit {\n    @Input() load: SwitchLoad;\n    powerState = false;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n    onToggleChange() {\n        this.powerState = !this.powerState;\n    }\n}\n","<mat-card class=\"card\">\n    <app-load-card-header [load]=\"load\"></app-load-card-header>\n    <div class=\"flex-horizontal w-100\">\n        <mat-slide-toggle\n            (toggleChange)=\"onToggleChange()\"\n            [checked]=\"powerState\"\n        ></mat-slide-toggle>\n        <p class=\"state-text\">{{ powerState ? 'ON' : 'OFF' }}</p>\n    </div>\n</mat-card>\n","import { Directive, ElementRef, Input, OnInit, OnDestroy} from '@angular/core';\r\ndeclare var CrComLib: any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[AnaFB]'\r\n})\r\nexport class AnaFbDirective implements OnInit, OnDestroy{\r\n\r\n  @Input('AnaFB') join: number;\r\n\r\n  constructor(private el: ElementRef ) { }\r\n  ngOnInit() {\r\n    CrComLib.subscribeState('n', String(this.join), (v) => { this.el.nativeElement.value = v; } );\r\n    this.el.nativeElement.value = CrComLib.getState('n', String(this.join));\r\n  }\r\n  ngOnDestroy() {\r\n    // CrComLib.unSubscribeState('n', String(this.join));\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\ndeclare var CrComLib: any;\r\n\r\n@Directive({\r\n    // tslint:disable-next-line: directive-selector\r\n    selector: '[AnaSend]',\r\n})\r\nexport class AnaSendDirective {\r\n    @Input('AnaSend') join: number;\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    @HostListener('input') onInput() {\r\n        CrComLib.publishEvent('n', String(this.join), Number(this.el.nativeElement.value));\r\n    }\r\n}\r\n","import { Directive, ElementRef, Input, OnInit, OnDestroy} from '@angular/core';\r\ndeclare var CrComLib: any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[DigEnable]'\r\n})\r\nexport class DigEnableDirective implements OnInit, OnDestroy{\r\n\r\n  @Input('DigEnable') join: number;\r\n\r\n  constructor(private el: ElementRef ) {  }\r\n\r\n  ngOnInit() {\r\n    this.setEnabled(CrComLib.getState('b', String(this.join)));\r\n    CrComLib.subscribeState('b', String(this.join), (v) => { this.setEnabled(v); } );\r\n  }\r\n  ngOnDestroy() {\r\n\r\n  }\r\n\r\n  setEnabled(enJoin: boolean) {\r\n    if (enJoin) {\r\n      this.el.nativeElement.disabled = false;\r\n    }\r\n    else{\r\n      this.el.nativeElement.disabled = true;\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnInit, OnDestroy} from '@angular/core';\r\ndeclare var CrComLib: any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[DigFB]'\r\n})\r\nexport class DigFbDirective implements OnInit, OnDestroy{\r\n\r\n  @Input('DigFB') join: number;\r\n\r\n  constructor(private el: ElementRef ) {  }\r\n\r\n  ngOnInit() {\r\n    this.setFB(CrComLib.getState('b', String(this.join)));\r\n    CrComLib.subscribeState('b', String(this.join), (v) => { this.setFB(v); } );\r\n  }\r\n  ngOnDestroy() {\r\n  }\r\n  setFB(fbJoin: boolean){\r\n    if (fbJoin) {\r\n      if (!this.el.nativeElement.classList.contains('active')){\r\n        this.el.nativeElement.classList.add('active');\r\n      }\r\n    }\r\n    else{\r\n      if (this.el.nativeElement.classList.contains('active')){\r\n        this.el.nativeElement.classList.remove('active');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n// iport { CrComService } from '../crcom.service';\r\ndeclare var CrComLib: any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[DigPress]'\r\n})\r\nexport class DigPressDirective {\r\n  @Input('DigPress') join: number;\r\n\r\n  private timerID: ReturnType<typeof setTimeout>;\r\n  private disable: boolean;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n\r\n  @HostListener('touchstart') onTouchStart(){\r\n    if (this.el.nativeElement.disabled !== true) {\r\n      // this.crcom.press(this.join);\r\n      CrComLib.publishEvent('b', String(this.join), true);\r\n      this.disable = true;\r\n      this.timerID = setTimeout(() => this.disable = false, 10);\r\n    }\r\n  }\r\n  @HostListener('touchend', ['$event']) onTouchEnd(e) {\r\n    if (this.el.nativeElement.disabled !== true) {\r\n      e.preventDefault();\r\n      // this.crcom.release(this.join);\r\n      CrComLib.publishEvent('b', String(this.join), false);\r\n      this.disable = true;\r\n      this.timerID = setTimeout(() => this.disable = false, 10);\r\n    }\r\n  }\r\n  @HostListener('touchcancel') onTouchCancel() {\r\n    if (this.el.nativeElement.disabled !== true) {\r\n      // this.crcom.release(this.join);\r\n      CrComLib.publishEvent('b', String(this.join), false);\r\n      this.disable = true;\r\n      this.timerID = setTimeout(() => this.disable = false, 10);\r\n    }\r\n  }\r\n  @HostListener('mousedown') onMouseDown() {\r\n    if (!this.disable) {\r\n      // this.crcom.press(this.join);\r\n      CrComLib.publishEvent('b', String(this.join), true);\r\n    }\r\n  }\r\n  @HostListener('mouseup') onMouseUp() {\r\n    if (!this.disable) {\r\n      // this.crcom.release(this.join);\r\n      CrComLib.publishEvent('b', String(this.join), false);\r\n    }\r\n  }\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    if (!this.disable) {\r\n      // this.crcom.release(this.join);\r\n      CrComLib.publishEvent('b', String(this.join), false);\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnInit, OnDestroy} from '@angular/core';\r\ndeclare var CrComLib: any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[DigVisible]'\r\n})\r\nexport class DigVisibleDirective implements OnInit, OnDestroy{\r\n\r\n  @Input('DigVisible') join: number;\r\n\r\n  constructor(private el: ElementRef ) {  }\r\n\r\n  ngOnInit() {\r\n    this.setVisibility(CrComLib.getState('b', String(this.join)));\r\n    CrComLib.subscribeState('b', String(this.join), (v) => { this.setVisibility(v); } );\r\n  }\r\n  ngOnDestroy() {\r\n\r\n  }\r\n\r\n  setVisibility(visJoin: boolean) {\r\n    if (visJoin) {\r\n      this.el.nativeElement.style.visibility = 'visible';\r\n    }\r\n    else{\r\n      this.el.nativeElement.style.visibility = 'hidden';\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit, OnDestroy} from '@angular/core';\r\ndeclare var CrComLib: any;\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() VisJoin: number;\r\n  public visible: boolean;\r\n\r\n  constructor(private el: ElementRef ) { }\r\n  ngOnInit() {\r\n    // this.showHide();\r\n    // this.crcom.update.subscribe(() => this.showHide());\r\n\r\n    this.showHide(CrComLib.getState('b', String(this.VisJoin)));\r\n    CrComLib.subscribeState('b', String(this.VisJoin), (v) => { this.showHide(v); } );\r\n  }\r\n  ngOnDestroy() {\r\n\r\n  }\r\n  showHide(visState: boolean) {\r\n    if (visState) { this.visible = true; }\r\n    else { this.visible = false; }\r\n  }\r\n}\r\n","<!-- The Modal -->\r\n<div id=\"myModal\" class=\"modal\" [style.display]=\"visible ? 'flex':'none'\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { Directive, ElementRef, Input, OnInit, OnDestroy} from '@angular/core';\r\ndeclare var CrComLib: any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[SerFB]'\r\n})\r\nexport class SerFbDirective implements OnInit, OnDestroy{\r\n\r\n  @Input('SerFB') join: number;\r\n\r\n  constructor(private el: ElementRef) { }\r\n  ngOnInit() {\r\n    this.el.nativeElement.innerHTML = CrComLib.getState('s', String(this.join));\r\n    CrComLib.subscribeState('s', String(this.join), (v) => { this.el.nativeElement.innerHTML = v; });\r\n  }\r\n  ngOnDestroy() {\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\ndeclare var CrComLib: any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[SerSend]'\r\n})\r\nexport class SerSendDirective {\r\n  @Input('SerSend') join: number;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('input') onInput(){\r\n    CrComLib.publishEvent('s', String(this.join), this.el.nativeElement.value);\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appClickStopPropagation]',\r\n})\r\nexport class StopPropagationDirective {\r\n    @HostListener('click', ['$event'])\r\n    public onClick(event: any): void {\r\n        event.stopPropagation();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-monitoring',\n  templateUrl: './monitoring.component.html',\n  styleUrls: ['./monitoring.component.scss']\n})\nexport class MonitoringComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Cam 1</h1>\n<div class=\"cam-container\">\n    <ch5-video\n        stretch=\"true\"\n        url=\"http://admin:Admin12345@192.168.86.240/ISAPI/Streaming/channels/102/httpPreview\"\n    ></ch5-video>\n</div>\n<ch5-button type=\"primary\" label=\"CH5 Test\"></ch5-button>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { RoomService } from 'src/app/service/room.service';\nimport { RouterService } from 'src/app/service/router.service';\nimport { Load } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-room-view',\n    templateUrl: './room-view.component.html',\n    styleUrls: ['./room-view.component.scss'],\n})\nexport class RoomViewComponent implements OnInit {\n    name = '';\n    load$: Observable<Load[]>;\n\n    constructor(private router: RouterService, private roomService: RoomService) {}\n\n    ngOnInit(): void {\n        this.load$ = this.router.getCurrentRoute().pipe(\n            switchMap(route => {\n                const name = route?.params?.name;\n                if (!name) {\n                    return of([]);\n                }\n                return this.roomService.getRoomLoadList(name);\n            })\n        );\n    }\n}\n","<div>\n    <div class=\"page-title-container\">\n        <p class=\"page-title\">{{ name }}</p>\n    </div>\n    <div class=\"device-container\">\n        <div *ngFor=\"let load of load$ | async\" [ngSwitch]=\"load.type\">\n            <app-dimmer-load [load]=\"load\" *ngSwitchCase=\"'dimmer'\"></app-dimmer-load>\n            <app-switch-load [load]=\"load\" *ngSwitchCase=\"'switch'\"></app-switch-load>\n            <app-motor-load [load]=\"load\" *ngSwitchCase=\"'motor'\"></app-motor-load>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RoomService } from 'src/app/service/room.service';\n\n@Component({\n    selector: 'app-rooms-panel',\n    templateUrl: './rooms-panel.component.html',\n    styleUrls: ['./rooms-panel.component.scss'],\n})\nexport class RoomsPanelComponent implements OnInit {\n    rooms = [];\n\n    constructor(private roomService: RoomService) {}\n\n    ngOnInit(): void {\n        this.roomService.getRoomList().subscribe(rooms => {\n            this.rooms = rooms;\n        });\n    }\n}\n","<div class=\"room-panel\">\n    <div *ngFor=\"let item of rooms\">\n        <app-room-card [name]=\"item.room\" [count]=\"item.count\"></app-room-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { RoomService } from 'src/app/service/room.service';\nimport { PAGE_SCENE_DETAILS, PAGE_SCENE_TABLE } from 'src/app/service/route';\nimport { RouterService } from 'src/app/service/router.service';\nimport { SceneService } from 'src/app/service/scene.service';\nimport { Load } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-scene-action-create',\n    templateUrl: './scene-action-create.component.html',\n    styleUrls: ['./scene-action-create.component.scss'],\n})\nexport class SceneActionCreateComponent implements OnInit {\n    scene!: string;\n\n    roomDeviceGroup!: FormGroup;\n    selectedRoom?: string;\n    selectedLoad?: Load;\n\n    room$!: Observable<string[]>;\n    load$!: Observable<Load[]>;\n\n    constructor(\n        private router: RouterService,\n        private formBuilder: FormBuilder,\n        private roomService: RoomService,\n        private sceneService: SceneService\n    ) {}\n\n    ngOnInit(): void {\n        this.roomDeviceGroup = this.formBuilder.group({\n            device: ['', Validators.required],\n            room: ['', Validators.required],\n        });\n\n        this.router.getCurrentRoute().subscribe(route => (this.scene = route?.params?.name));\n        this.room$ = this.roomService.getRoomList().pipe(map(list => list.map(l => l.room)));\n        this.load$ = this.roomDeviceGroup.controls.room.valueChanges.pipe(\n            switchMap(room => {\n                if (!this.scene) {\n                    return of([] as Load[]);\n                }\n                return this.sceneService.getSceneLoadList(this.scene, room);\n            })\n        );\n        this.roomDeviceGroup.controls.device.valueChanges.subscribe(\n            load => (this.selectedLoad = load)\n        );\n    }\n\n    back() {\n        if (this.scene) {\n            this.router.navigate(PAGE_SCENE_DETAILS, { name: this.scene });\n        } else {\n            this.router.navigate(PAGE_SCENE_TABLE);\n        }\n    }\n}\n","<app-error-message-bar\n    *ngIf=\"!scene\"\n    message=\"Scene does not exist\"\n    (back)=\"back()\"\n></app-error-message-bar>\n\n<div *ngIf=\"scene\" class=\"action-create-wrapper\">\n    <div style=\"display: flex; width: 100%\">\n        <p class=\"page-title\">Create an Action For Your Scene</p>\n        <div style=\"margin-left: auto\">\n            <button mat-button (click)=\"back()\" color=\"primary\">Back</button>\n        </div>\n    </div>\n    <form [formGroup]=\"roomDeviceGroup\">\n        <h3>Step 1: Select a device</h3>\n        <div>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Choose a room</mat-label>\n                <mat-select required formControlName=\"room\">\n                    <mat-option *ngFor=\"let room of room$ | async\" [value]=\"room\">\n                        {{ room }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Choose a device</mat-label>\n                <mat-select required formControlName=\"device\">\n                    <mat-option *ngFor=\"let load of load$ | async\" [value]=\"load\">\n                        {{ load.name }} ({{ load.type | uppercase }})\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </form>\n    <div *ngIf=\"roomDeviceGroup.value.device\">\n        <h3>\n            Step 2: Select the action for\n            {{ selectedLoad.name }} in {{ roomDeviceGroup.value.room }}\n        </h3>\n        <ng-container [ngSwitch]=\"selectedLoad.type\">\n            <ng-container *ngSwitchCase=\"'dimmer'\">\n                <app-dimmer-action-form\n                    [sceneId]=\"scene\"\n                    [load]=\"selectedLoad\"\n                ></app-dimmer-action-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'switch'\">\n                <app-switch-action-form\n                    [sceneId]=\"scene\"\n                    [load]=\"selectedLoad\"\n                ></app-switch-action-form>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'motor'\">\n                <app-motor-action-form\n                    [sceneId]=\"scene\"\n                    [load]=\"selectedLoad\"\n                ></app-motor-action-form>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatTable } from '@angular/material/table';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { PAGE_SCENE_ACTION_CREATE, PAGE_SCENE_TABLE } from 'src/app/service/route';\nimport { RouterService } from 'src/app/service/router.service';\nimport { SceneService } from 'src/app/service/scene.service';\nimport { MotorActionType, SceneAction } from 'src/app/service/type';\n\n@Component({\n    selector: 'app-scene-details',\n    templateUrl: './scene-details.component.html',\n    styleUrls: ['./scene-details.component.scss'],\n})\nexport class SceneDetailsComponent implements OnInit {\n    @ViewChild(MatTable) table: MatTable<SceneAction>;\n\n    scene: string;\n    columns = ['load', 'room', 'action', 'option'];\n    dataSource!: SceneAction[];\n\n    editMode = false;\n    nameFormControl: FormControl;\n\n    constructor(private router: RouterService, private sceneService: SceneService) {}\n\n    ngOnInit(): void {\n        this.router\n            .getCurrentRoute()\n            .pipe(\n                switchMap(route => {\n                    this.scene = route?.params?.name;\n                    if (!this.scene) {\n                        return of([] as SceneAction[]);\n                    }\n                    return this.sceneService.getSceneActions(this.scene);\n                })\n            )\n            .subscribe(actions => {\n                this.dataSource = actions;\n            });\n        this.nameFormControl = new FormControl(this.scene, Validators.required);\n    }\n\n    changeToEditMode() {\n        this.editMode = true;\n    }\n\n    changeSceneName() {\n        this.scene = this.nameFormControl.value;\n        this.editMode = false;\n    }\n\n    getMotorAction(action: MotorActionType) {\n        switch (action) {\n            case MotorActionType.LOWER:\n                return 'LOWER';\n            case MotorActionType.RAISE:\n                return 'RAISE';\n            case MotorActionType.STOP:\n                return 'STOP';\n        }\n    }\n\n    deleteAction(action: SceneAction) {\n        this.sceneService.deleteActionFromScene(this.scene, action).subscribe(actions => {\n            this.dataSource = actions;\n            this.table.renderRows();\n        });\n    }\n\n    navigateToSceneTable() {\n        this.router.navigate(PAGE_SCENE_TABLE);\n    }\n\n    navigateToActionCreate() {\n        this.router.navigate(PAGE_SCENE_ACTION_CREATE, { name: this.scene });\n    }\n}\n","<div class=\"scene-table-wrapper\">\n    <div *ngIf=\"scene === undefined\">\n        <h2>This scene id does not exist</h2>\n    </div>\n    <div *ngIf=\"scene\">\n        <div class=\"scene-table-header\">\n            <div class=\"scene-table-title\" *ngIf=\"!editMode\">\n                <p class=\"page-title edit-name-label\">Scene: {{ scene }}</p>\n                <mat-icon (click)=\"changeToEditMode()\">edit</mat-icon>\n            </div>\n            <form\n                class=\"flex-horizontal\"\n                *ngIf=\"editMode\"\n                appClickStopPropagation\n                (ngSubmit)=\"changeSceneName()\"\n            >\n                <mat-form-field class=\"field\">\n                    <input matInput placeholder=\"Name\" [formControl]=\"nameFormControl\" />\n                </mat-form-field>\n                <button mat-button color=\"primary\" type=\"submit\">Change</button>\n            </form>\n            <button mat-button color=\"primary\" (click)=\"navigateToSceneTable()\">Back</button>\n        </div>\n        <div class=\"add-button-wrapper\">\n            <button mat-button color=\"primary\" (click)=\"navigateToActionCreate()\">\n                <mat-icon>add</mat-icon>\n                Create New Action\n            </button>\n        </div>\n\n        <div>\n            <table #table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 table\">\n                <ng-container matColumnDef=\"load\">\n                    <th mat-header-cell *matHeaderCellDef>Device Name</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        {{ element.name }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"room\">\n                    <th mat-header-cell *matHeaderCellDef>Room</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        {{ element.roomId }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell *matHeaderCellDef>Actions</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <div *ngIf=\"element.type === 'motor'\">\n                            {{ getMotorAction(element.action) }}\n                        </div>\n                        <div *ngIf=\"element.type === 'dimmer'\">\n                            <div>Brightness: {{ element.brightness }}%</div>\n                            <div>Delay: {{ element.delay }}s</div>\n                            <div>Fade: {{ element.fade }}s</div>\n                        </div>\n                        <div *ngIf=\"element.type === 'switch'\">\n                            <div>\n                                On/Off:\n                                {{ element.power ? 'ON' : 'OFF' }}\n                            </div>\n                            <div>Delay: {{ element.delay }}s</div>\n                        </div>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"option\">\n                    <th mat-header-cell *matHeaderCellDef>Option</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <button mat-raised-button color=\"warn\" (click)=\"deleteAction(element)\">\n                            Delete\n                        </button>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n                <tr\n                    mat-row\n                    *matRowDef=\"let row; let i = index; columns: columns\"\n                    longPress\n                    class=\"row\"\n                ></tr>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTable } from '@angular/material/table';\nimport { PAGE_SCENE_DETAILS } from 'src/app/service/route';\nimport { RouterService } from 'src/app/service/router.service';\nimport { SceneService } from 'src/app/service/scene.service';\n\ninterface SceneTableRow {\n    name: string;\n    numberOfAction: number;\n    action: any;\n}\n\n@Component({\n    selector: 'app-scene-table',\n    templateUrl: './scene-table.component.html',\n    styleUrls: ['./scene-table.component.scss'],\n})\nexport class SceneTableComponent implements OnInit {\n    @ViewChild(MatTable) table: MatTable<SceneTableRow>;\n    dataSource!: SceneTableRow[];\n    columns = ['name', 'numberOfAction', 'action'];\n\n    constructor(private router: RouterService, private sceneService: SceneService) {}\n\n    ngOnInit(): void {\n        this.sceneService.getSceneList().subscribe(scenes => {\n            this.dataSource = scenes.map(scene => ({\n                name: scene.name,\n                numberOfAction: scene.actions.length,\n                action: null,\n            }));\n        });\n    }\n\n    addScene() {\n        this.sceneService.createNewScene().subscribe(scene => {\n            this.router.navigate(PAGE_SCENE_DETAILS, { name: scene });\n        });\n    }\n\n    deleteScene(row: SceneTableRow) {\n        this.sceneService.deleteScene(row.name).subscribe(scenes => {\n            this.dataSource = scenes.map(scene => ({\n                name: scene.name,\n                numberOfAction: scene.actions.length,\n                action: null,\n            }));\n            this.table.renderRows();\n        });\n    }\n\n    navigateToDetails(scene: string) {\n        this.router.navigate(PAGE_SCENE_DETAILS, { name: scene });\n    }\n}\n","<div class=\"wrapper\">\n    <p class=\"page-title\">Scene Table</p>\n    <div class=\"button-container\">\n        <button mat-raised-button (click)=\"addScene()\">Add Scene</button>\n    </div>\n\n    <table #table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 table\">\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.name }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"numberOfAction\">\n            <th mat-header-cell *matHeaderCellDef>Number of Action</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.numberOfAction }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button\n                    mat-raised-button\n                    color=\"primary\"\n                    class=\"button-wrapper\"\n                    (click)=\"navigateToDetails(element.name)\"\n                >\n                    Edit\n                </button>\n                <button mat-raised-button color=\"warn\" (click)=\"deleteScene(element)\">\n                    Delete\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.scss']\n})\nexport class SettingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>setting works!</p>\n","import { DIMMER, Load, MOTOR, MotorActionType, Scene, SWITCH } from './type';\r\n\r\nexport const BEDROOM_1 = 'Bedroom 1';\r\nexport const BEDROOM_2 = 'Bedroom 2';\r\nexport const BEDROOM_3 = 'Bedroom 3';\r\nexport const BATHROOM = 'Bathroom';\r\nexport const LIVING_ROOM = 'Living Room';\r\nexport const DINING_ROOM = 'Dining Room';\r\nexport const MBR = 'MBR';\r\nexport const BALCONY = 'Balcony';\r\n\r\nexport const ROOM = [\r\n    BEDROOM_1,\r\n    BEDROOM_2,\r\n    BEDROOM_3,\r\n    BATHROOM,\r\n    LIVING_ROOM,\r\n    DINING_ROOM,\r\n    MBR,\r\n    BALCONY,\r\n];\r\n\r\nexport const LOAD: Load[] = [\r\n    { type: DIMMER, id: 1, name: 'Dimmer-1', brightness: 10, roomId: BEDROOM_1 },\r\n    { type: SWITCH, id: 2, name: 'Switch-1', power: false, roomId: BEDROOM_1 },\r\n    { type: MOTOR, id: 3, name: 'Motor-1', roomId: BEDROOM_1 },\r\n    { type: DIMMER, id: 4, name: 'Dimmer-1', brightness: 10, roomId: BEDROOM_2 },\r\n    { type: SWITCH, id: 5, name: 'Switch-1', power: false, roomId: BEDROOM_2 },\r\n    { type: MOTOR, id: 6, name: 'Motor-1', roomId: BEDROOM_2 },\r\n    { type: DIMMER, id: 7, name: 'Dimmer-1', brightness: 10, roomId: BEDROOM_3 },\r\n    { type: SWITCH, id: 8, name: 'Switch-1', power: false, roomId: BEDROOM_3 },\r\n    { type: MOTOR, id: 9, name: 'Motor-1', roomId: BEDROOM_3 },\r\n    { type: DIMMER, id: 10, name: 'Dimmer-1', brightness: 10, roomId: BATHROOM },\r\n    { type: SWITCH, id: 11, name: 'Switch-1', power: false, roomId: BATHROOM },\r\n    { type: MOTOR, id: 12, name: 'Motor-1', roomId: BATHROOM },\r\n    { type: DIMMER, id: 13, name: 'Dimmer-1', brightness: 10, roomId: LIVING_ROOM },\r\n    { type: SWITCH, id: 14, name: 'Switch-1', power: false, roomId: LIVING_ROOM },\r\n    { type: MOTOR, id: 15, name: 'Motor-1', roomId: LIVING_ROOM },\r\n    { type: DIMMER, id: 16, name: 'Dimmer-1', brightness: 10, roomId: DINING_ROOM },\r\n    { type: SWITCH, id: 17, name: 'Switch-1', power: false, roomId: DINING_ROOM },\r\n    { type: MOTOR, id: 18, name: 'Motor-1', roomId: DINING_ROOM },\r\n    { type: DIMMER, id: 19, name: 'Dimmer-1', brightness: 10, roomId: MBR },\r\n    { type: SWITCH, id: 20, name: 'Switch-1', power: false, roomId: MBR },\r\n    { type: MOTOR, id: 21, name: 'Motor-1', roomId: MBR },\r\n    { type: DIMMER, id: 22, name: 'Dimmer-1', brightness: 10, roomId: BALCONY },\r\n    { type: SWITCH, id: 23, name: 'Switch-1', power: false, roomId: BALCONY },\r\n    { type: MOTOR, id: 24, name: 'Motor-1', roomId: BALCONY },\r\n    { type: DIMMER, id: 25, name: 'Dimmer-2', brightness: 10, roomId: BALCONY },\r\n    { type: SWITCH, id: 26, name: 'Switch-2', power: false, roomId: BALCONY },\r\n    { type: MOTOR, id: 27, name: 'Motor-2', roomId: BALCONY },\r\n];\r\n\r\nexport const SCENE: Scene[] = [\r\n    {\r\n        name: 'Scene 1',\r\n        actions: [\r\n            {\r\n                type: DIMMER,\r\n                id: 22,\r\n                name: 'Dimmer-1',\r\n                brightness: 10,\r\n                roomId: BALCONY,\r\n                fade: 2,\r\n                delay: 2,\r\n            },\r\n            {\r\n                type: SWITCH,\r\n                id: 23,\r\n                name: 'Switch-1',\r\n                power: true,\r\n                roomId: BALCONY,\r\n                delay: 2,\r\n            },\r\n            {\r\n                type: MOTOR,\r\n                id: 24,\r\n                name: 'Motor-1',\r\n                roomId: BALCONY,\r\n                action: MotorActionType.LOWER,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: 'Scene 2',\r\n        actions: [\r\n            {\r\n                type: DIMMER,\r\n                id: 22,\r\n                name: 'Dimmer-1',\r\n                brightness: 10,\r\n                roomId: BALCONY,\r\n                fade: 2,\r\n                delay: 2,\r\n            },\r\n            {\r\n                type: SWITCH,\r\n                id: 23,\r\n                name: 'Switch-1',\r\n                power: true,\r\n                roomId: BALCONY,\r\n                delay: 2,\r\n            },\r\n            {\r\n                type: MOTOR,\r\n                id: 24,\r\n                name: 'Motor-1',\r\n                roomId: BALCONY,\r\n                action: MotorActionType.LOWER,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: 'Scene 3',\r\n        actions: [\r\n            {\r\n                type: DIMMER,\r\n                id: 22,\r\n                name: 'Dimmer-1',\r\n                brightness: 10,\r\n                roomId: BALCONY,\r\n                fade: 2,\r\n                delay: 2,\r\n            },\r\n            {\r\n                type: SWITCH,\r\n                id: 23,\r\n                name: 'Switch-1',\r\n                power: true,\r\n                roomId: BALCONY,\r\n                delay: 2,\r\n            },\r\n            {\r\n                type: MOTOR,\r\n                id: 24,\r\n                name: 'Motor-1',\r\n                roomId: BALCONY,\r\n                action: MotorActionType.LOWER,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nlet SCENE_NUMBER = 4;\r\nexport const getSceneName = () => `Scene ${SCENE_NUMBER++}`;\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, of, throwError } from 'rxjs';\nimport { LOAD, ROOM } from './data';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomService {\n    numberOfDevice = new Map<string, number>();\n    room$: BehaviorSubject<{ room: string; count: number }[]>;\n\n    constructor() {\n        for (const room of ROOM) {\n            this.numberOfDevice.set(room, 0);\n        }\n        for (const load of LOAD) {\n            if (this.numberOfDevice.has(load.roomId)) {\n                const count = this.numberOfDevice.get(load.roomId) + 1;\n                this.numberOfDevice.set(load.roomId, count);\n            }\n        }\n        this.room$ = new BehaviorSubject(this.getRoomStream());\n    }\n\n    getRoomList() {\n        return this.room$;\n    }\n\n    getRoomLoadList(room: string) {\n        const loadList = LOAD.filter(load => load.roomId === room);\n        return of(loadList);\n    }\n\n    changeRoomName(originalName: string, newName: string) {\n        if (originalName === newName) {\n            return of(ROOM);\n        }\n        const roomIndex = ROOM.findIndex(room => room === originalName);\n        if (roomIndex === -1) {\n            return throwError('room does not exist');\n        }\n        const newRoomExist = ROOM.findIndex(room => room === newName);\n        if (newRoomExist !== -1) {\n            return throwError(`room name (${newName}) already exists`);\n        }\n        ROOM[roomIndex] = newName;\n\n        this.numberOfDevice.set(newName, this.numberOfDevice.get(originalName));\n        this.numberOfDevice.delete(originalName);\n        this.room$.next(this.getRoomStream());\n        return of(ROOM);\n    }\n\n    getRoomStream() {\n        return Array.from(this.numberOfDevice, ([key, value]) => ({\n            room: key,\n            count: value,\n        }));\n    }\n}\n","export const PAGE_ROOMS_PANEL = 'room_panel';\r\nexport const PAGE_MONITORING = 'monitoring';\r\nexport const PAGE_ROOM_VIEW = 'room_view';\r\nexport const PAGE_SCENE_TABLE = 'scene_table';\r\nexport const PAGE_SCENE_DETAILS = 'scene_details';\r\nexport const PAGE_SCENE_ACTION_CREATE = 'scene_action_create';\r\nexport const PAGE_SCENE_ACTION_EDIT = 'scene_action_edit';\r\nexport const PAGE_SETTING = 'setting';\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { PAGE_SCENE_DETAILS } from './route';\n\ntype RouteInfo = {\n    path: string;\n    params: any;\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RouterService {\n    route$ = new BehaviorSubject<RouteInfo>({\n        path: PAGE_SCENE_DETAILS,\n        params: { name: 'Scene 1' },\n    });\n\n    constructor() {}\n\n    navigate(path: string, params?: any) {\n        this.route$.next({ path, params });\n    }\n\n    getCurrentRoute() {\n        return this.route$;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { getSceneName, LOAD, SCENE } from './data';\nimport { Load, Scene, SceneAction } from './type';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SceneService {\n    constructor() {}\n\n    getSceneList(): Observable<Scene[]> {\n        return of(SCENE);\n    }\n\n    getSceneActions(name: string): Observable<SceneAction[]> {\n        const s = SCENE.find(scene => scene.name === name);\n        if (!s) {\n            return of([]);\n        }\n        return of(s.actions);\n    }\n\n    getSceneLoadList(id: string, room: string): Observable<Load[]> {\n        const scene = SCENE.find(s => s.name === id);\n        if (!scene) {\n            throw new Error('Scene does not exist');\n        }\n        const loadList = LOAD.filter(\n            load => scene.actions.findIndex(action => action.id === load.id) === -1\n        ).filter(load => load.roomId === room);\n        return of(loadList);\n    }\n\n    createNewScene(): Observable<string> {\n        const name = getSceneName();\n        SCENE.push({ name, actions: [] });\n        return of(name);\n    }\n\n    deleteScene(id: string): Observable<Scene[]> {\n        const sceneIndex = SCENE.findIndex(s => s.name === id);\n        if (sceneIndex === -1) {\n            throw new Error(`Scene (${id}) does not exist`);\n        }\n        SCENE.splice(sceneIndex, 1);\n        return of(SCENE);\n    }\n\n    addActionToScene(id: string, action: SceneAction): Observable<Scene> {\n        const scene = SCENE.find(s => s.name === id);\n        if (!scene) {\n            throw new Error(`Scene (${id}) does not exist`);\n        }\n        scene.actions.push(action);\n        return of(scene);\n    }\n\n    deleteActionFromScene(id: string, action: SceneAction): Observable<SceneAction[]> {\n        const scene = SCENE.find(s => s.name === id);\n        if (!scene) {\n            throw new Error(`Scene (${id}) does not exist`);\n        }\n        const deleteActionIndex = scene.actions.findIndex(a => a.id === action.id);\n        scene.actions.splice(deleteActionIndex, 1);\n        return of(scene.actions);\n    }\n}\n","// Load\r\nexport const DIMMER = 'dimmer';\r\nexport const SWITCH = 'switch';\r\nexport const MOTOR = 'motor';\r\nexport type LoadType = typeof DIMMER | typeof SWITCH | typeof MOTOR;\r\n\r\ntype BaseLoad = {\r\n    id: number;\r\n    name: string;\r\n    type: LoadType;\r\n    roomId: string;\r\n};\r\n\r\nexport type MotorLoad = BaseLoad;\r\n\r\nexport type DimmerLoad = BaseLoad & {\r\n    brightness: number;\r\n};\r\n\r\nexport type SwitchLoad = BaseLoad & {\r\n    power: boolean;\r\n};\r\n\r\nexport type Load = MotorLoad | DimmerLoad | SwitchLoad;\r\n\r\n// Scene\r\nexport enum MotorActionType {\r\n    RAISE,\r\n    STOP,\r\n    LOWER,\r\n}\r\n\r\nexport type MotorAction = MotorLoad & { action: MotorActionType };\r\nexport type DimmerAction = DimmerLoad & { delay: number; fade: number };\r\nexport type SwitchAction = SwitchLoad & { delay: number };\r\nexport type SceneAction = MotorAction | DimmerAction | SwitchAction;\r\nexport type Scene = {\r\n    name: string;\r\n    actions: SceneAction[];\r\n};\r\n","import { TranslateLoader } from '@ngx-translate/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport eng from '../../assets/i18n/en.json';\r\nimport zh from '../../assets/i18n/zh.json';\r\n\r\nexport default class CustomLoader implements TranslateLoader {\r\n    getTranslation(lang: string): Observable<any> {\r\n        switch (lang) {\r\n            case 'eng':\r\n                return of(eng);\r\n            case 'zh':\r\n                return of(zh);\r\n            default:\r\n                return of(eng);\r\n        }\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}